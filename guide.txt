#仓库操作
	1.初始化空仓库: git init
	2.克隆远程库: git clone <url>
	2.删除仓库: rm -rf .git

#添加与提交
	1.添加单个文件的修改: git add <filename>
	2.添加所有修改: git add .
	3.提交暂存区内容: git commit -m "<提交信息>"


#修改文件
	1.文件改名: git mv <oldpath> <newpath>
	2.停止跟踪文件: git rm --cached <filename>
	3.强制删除文件: git rm -f <filename>

#撤销操作
	1.撤销工作区中的修改(还未添加至暂存区): git checkout <filename>
	2.撤销暂存区中指定文件的修改(还未提交): git reset HEAD <filename>
	3.回退至上次提交: git reset --hard HEAD^
	4.回退至指定提交: git reset --hard <commit id,可只写前几位>

#分支操作
	1.创建新分支: git branch <new branch>
		创建并切换到新分支: git switch -c <new branch>
	2.切换分支: git switch <branch>
	3.删除分支: git branch -d <branch>
	4.合并指定分支到当前分支: git merge <branch>

#远程操作
	1.关联远程库: git remote add <remote,一般默认origin> <url>
	2.本地推送到远程: git push (-u)<remote> <branch>   带上-u参数可将本地master分支与远程的master分支自动关联
	3.从远程库获取数据但不合并: git fetch <remote> <branch>(若省略则获取所有分支)
		fetch后,使用git merge <remote> <branch>合并分支
	4.从远程库获取数据并自动合并至当前分支: git pull <remote> <branch>	 相当于fetch+merge 

#其他
	1.查看仓库状态: git status
	2.查看暂存区和工作区差异: git diff <filename>
	3.查看提交历史: git log
	4.查看所有本地分支: git branch
